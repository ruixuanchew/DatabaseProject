  Installations:
  1. Install Node.js from the official Node.js Website (https://nodejs.org/en)
  2. Verify installation by running node -v in terminal 
  3. Run npm install in terminal after cloning project. It should have installed express and mysql2.

  Setting up:
  1. Create a database in your local machine (e.g. MariaDB or mySQL Workbench)
  2. Go to /js/db.js, change const connection = mysql.createConnection... to your own configs
  3. Create tables recipes, planners, users, nutritions in your local database.
  These are what I set up as the parameters for now: 
  recipes table: 
   +-----------------+--------------+------+-----+---------+----------------+
  | Field           | Type         | Null | Key | Default | Extra          |
  +-----------------+--------------+------+-----+---------+----------------+
  | recipe_id       | int(11)      | NO   | PRI | NULL    | auto_increment |
  | name            | varchar(255) | NO   |     | NULL    |                |
  | description     | text         | YES  |     | NULL    |                |
  | ingredients     | text         | NO   |     | NULL    |                |
  | ingredients_raw | text         | NO   |     | NULL    |                |
  | serving_size    | varchar(255) | YES  |     | NULL    |                |
  | servings        | int(11)      | NO   |     | NULL    |                |
  | steps           | text         | YES  |     | NULL    |                |
  | tags            | varchar(255) | YES  |     | NULL    |                |
  | search_terms    | varchar(255) | YES  |     | NULL    |                |
  +-----------------+--------------+------+-----+---------+----------------+          

  planners table:
  +-------------+--------------+------+-----+---------+----------------+
  | Field       | Type         | Null | Key | Default | Extra          |
  +-------------+--------------+------+-----+---------+----------------+
  | planner_id  | int(11)      | NO   | PRI | NULL    | auto_increment |
  | user_id     | int(11)      | NO   | MUL | NULL    |                | FK
  | recipe_id   | int(11)      | YES  | MUL | NULL    |                | FK
  | title       | varchar(255) | YES  |     | NULL    |                |
  | description | text         | YES  |     | NULL    |                |
  | time        | varchar(50)  | YES  |     | NULL    |                |
  | date        | varchar(50)  | YES  |     | NULL    |                |
  +-------------+--------------+------+-----+---------+----------------+

  users table:
  +----------+--------------+------+-----+---------+----------------+
  | Field    | Type         | Null | Key | Default | Extra          |
  +----------+--------------+------+-----+---------+----------------+
  | user_id  | int(11)      | NO   | PRI | NULL    | auto_increment |
  | username | varchar(255) | NO   |     | NULL    |                |
  | email    | varchar(255) | NO   |     | NULL    |                |
  | password | text         | NO   |     | NULL    |                |
  +----------+--------------+------+-----+---------+----------------+
  INSERT TESTDB NUTRITION:
  
  nutrition table:
  MariaDB [testdb]> SHOW COLUMNS FROM nutrition;
  +--------------+--------------+------+-----+---------+----------------+
  | Field        | Type         | Null | Key | Default | Extra          |
  +--------------+--------------+------+-----+---------+----------------+
  | nutrition_id | int(11)      | NO   | PRI | NULL    | auto_increment |
  | food_name    | varchar(255) | YES  |     | NULL    |                |
  | measure      | varchar(255) | YES  |     | NULL    |                |
  | grams        | int(11)      | YES  |     | NULL    |                |
  | calories     | int(11)      | YES  |     | NULL    |                |
  | protein      | int(11)      | YES  |     | NULL    |                |
  | fat          | int(11)      | YES  |     | NULL    |                |
  | fiber        | int(11)      | YES  |     | NULL    |                |
  | carbs        | int(11)      | YES  |     | NULL    |                |
  | category     | varchar(255) | YES  |     | NULL    |                |
  +--------------+--------------+------+-----+---------+----------------+

  INSERT TESTDB EXAMPLE NUTRITION:
  INSERT INTO nutrition (food_name, measure, grams, calories, protein, fat, fiber, carbs, category) VALUES
  ('Cow Milk','1 qt.', 976, 660, 32, 40, 0, 48, 'Dairy products'),
  ('Milk Skim','1 qt.', 984, 360, 36, NULL, 0, 52, 'Dairy products'),
  ('Buttermilk','1 cup', 246, 127, 9, 5, 0, 13, 'Dairy products'),
  ('Fortified Milk','1 cup', 252, 345, 16, 20, 0, 24, 'Dairy products'),
  ('Powdered Milk','6 cups', 1419, 1373, 89, 42, 1.4, 119, 'Dairy products');

  Understanding the code
  1. Whenever you have any changes in fields like u added or removed a new field 
     - Go to /models/?.js (e.g. /models/recipe.js)
     - Follow the flow I think u smart enough to understand to add or remove fields
  2. Whenever you want to add a new query such as CRUD queries or JOIN queries 
     - Go to /models/?DB.js (e.g. /models/recipeDB.js)
     - Go to /routes/route?.js (e.g. /routes/routeRecipe.js)
     - Add the respective request function and new function added 
     - GET, POST (ADD), PUT (UPDATE), DELETE

  3. Displaying it in UI, /public/js/?.js (e.g. /public/js/recipes.js)
     - See my example of displaying recipes
  
  4. All HTML files are in /public folder. 

  5. Start page is recipes.html


  
